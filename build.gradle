group = 'org.pogoapi'
version = '0.2.0'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.7.7'
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.google.protobuf'

description = "A lightest API in Java for interacting with PokemonGo's servers"

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven { url "https://jitpack.io" }
}

dependencies {
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.google.protobuf:protobuf-java:3.0.0-beta-3'
    compile 'net.jpountz.lz4:lz4:1.3.0'
    compile 'net.java.dev.jna:jna:4.2.2'
    compileOnly 'org.projectlombok:lombok:1.16.6'
}

sourceSets {
    main {
        proto {
            srcDir 'src/resources/protobuf/src'
            include '**/*.proto'
        }
    }
}

processResources {
    exclude('**/*')
}

task bundle(type: Jar) {
    from {
        configurations.compile.collect {
            it.isDirectory() && !it.isEmpty() ? it : zipTree(it)
        }
    }
    with jar
}

jar.finalizedBy(bundle)

protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.0.0-beta-3'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    javadoc.failOnError(false);
    javadoc.source = sourceSets.main.allJava
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}